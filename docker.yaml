---
- hosts: docker
  become: yes

  vars_files:
    - vars/main.yaml

  pre_tasks:
    - name: Ensure dependencies are installed
      pacman:
        update_cache: yes
        name:
          - ntp
          - docker
          - python-pip
          - python-setuptools
          - python-virtualenv

    - name: Ensure python docker library is installed
      pip:
        name: docker

    - name: Ensure ntpd daemon is started and enabled
      systemd:
        name: ntpd
        enabled: yes
        state: started

    - name: Ensure docker daemon is started and enabled
      systemd:
        name: docker
        enabled: yes
        state: started

  tasks:
    - name: Ensure docker user is created
      user:
        name: docker

    - name: Ensure that the docker volumes directory is created
      file:
        path: /home/docker/volumes
        state: directory

- hosts: docker01
  become: yes

  tasks:
    - name: Ensure that portainer data volume is created
      docker_volume:
        name: portainer_data

    - name: Ensure that portainer container is created
      docker_container:
        name: portainer
        image: portainer/portainer-ee:2.15.1
        restart_policy: always
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"
        mounts:
          - source: portainer_data
            target: /data
        ports:
          - "8000:8000"
          - "9443:9443"

- hosts: docker02
  become: yes

  vars_files:
    - vars/main.yaml
    - vars/secrets.yaml

  handlers:
    - name: Restart Caddy
      docker_container:
        name: caddy
        state: started
        restart: yes

  tasks:
    - name: Ensure that reverse proxy docker network is created
      docker_network:
        name: reverse_proxy

    - name: Ensure that caddy data volume is created
      docker_volume:
        name: caddy_data

    - name: Ensure that caddy config volume is created
      docker_volume:
        name: caddy_config

    - name: Ensure caddyfile volume directory is created
      file:
        path: /home/docker/volumes/caddy
        state: directory

    - name: Ensure the caddyfile is up to date
      template:
        src: config/Caddyfile.j2
        dest: /home/docker/volumes/caddy/Caddyfile
      notify:
        - Restart Caddy

    - name: Ensure that caddy container is created
      docker_container:
        name: caddy
        image: bloveless/caddy:2.5.2-0.1.0
        restart_policy: always
        networks:
          - name: reverse_proxy
        volumes:
          - "/home/docker/volumes/caddy/Caddyfile:/etc/caddy/Caddyfile"
        mounts:
          - source: caddy_data
            target: /data
          - source: caddy_config
            target: /config
        ports:
          - "80:80"
          - "443:443"
          - "443:443/udp"

    - name: Ensure cloudflared container is created
      docker_container:
        name: cloudflared
        image: cloudflare/cloudflared:2022.9.0-amd64
        command: "tunnel --no-autoupdate run --token {{ cloudflared_key }}"
        restart_policy: always

    - name: Ensure that heimdall config volume is created
      docker_volume:
        name: heimdall

    - name: Ensure that heimdall container is created
      docker_container:
        name: heimdall
        image: lscr.io/linuxserver/heimdall:2.4.13
        restart_policy: always
        mounts:
          - source: heimdall
            target: /config
        ports:
          - "8080:80"

- hosts: docker03
  become: yes

  vars_files:
    - vars/main.yaml
    - vars/secrets.yaml

  handlers:
    - name: Restart homer
      docker_container:
        name: homer
        state: started
        restart: yes

  tasks:
    - name: Ensure homer volume directory is created
      file:
        path: /home/docker/volumes/homer
        state: directory

    - name: Ensure the homer config is up to date
      template:
        src: config/homer-config.yaml.j2
        dest: /home/docker/volumes/homer/config.yaml
      notify:
        - Restart homer

    - name: Ensure that homer assets volume is created
      docker_volume:
        name: homer_assets

    - name: Ensure that homer container is created
      docker_container:
        name: homer
        image: b4bz/homer:v22.08.1
        restart_policy: always
        volumes:
          - "/home/docker/volumes/homer/config.yaml:/assets/config.yml"
        mounts:
          - source: homer_assets
            target: /assets
        ports:
          - "8080:8080"

