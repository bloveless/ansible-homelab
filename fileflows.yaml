---
- hosts: fileflows
  become: yes

  vars_files:
    - vars/main.yaml

  tasks:
    - name: Include prometheus node exporter
      include_tasks: shared_tasks/prometheus_node_exporter.yaml

    - name: Ensure dependencies are installed
      pacman:
        update_cache: yes
        name:
          - rpcbind
          - nfs-utils
          - ntp
          - docker
          - python-pip
          - python-setuptools
          - python-virtualenv

    - name: Ensure python docker library is installed
      pip:
        name: docker

    - name: Ensure ntpd daemon is started and enabled
      systemd:
        name: ntpd
        enabled: yes
        state: started

    - name: Ensure docker daemon is started and enabled
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Ensure that the media mount directory exists
      file:
        state: directory
        path: /mnt/media

    - name: Ensure that the media NFS is mounted
      mount:
        src: 192.168.4.245:/volume1/k8s/media-server/plex/data/library
        path: /mnt/media
        opts: rw,sync,hard,nfsvers=4.1
        state: mounted
        fstype: nfs

    - name: Ensure that the media group exists
      group:
        name: media

    - name: Ensure that the fileflows user exists
      user:
        name: fileflows
        append: yes
        groups:
          - media

    - name: Ensure that the fileflows directory exists
      file:
        state: directory
        path: /opt/FileFlows
        owner: fileflows
        group: media
        mode: 0774

    - name: Ensure that the fileflows data directory exists
      file:
        state: directory
        path: /opt/FileFlows/Data
        owner: fileflows
        group: media
        mode: 0774

    - name: Ensure that the fileflows temp directory exists
      file:
        state: directory
        path: /opt/FileFlows/Temp
        owner: fileflows
        group: media
        mode: 0774

    - name: Ensure that the fileflows temp directory exists
      file:
        state: directory
        path: /opt/FileFlows/Logs
        owner: fileflows
        group: media
        mode: 0774

- hosts: fileflows_server
  become: yes

  vars_files:
    - vars/main.yaml

  tasks:
    - name: Ensure that the fileflows server docker container is running
      docker_container:
        name: fileflows01
        hostname: fileflows01
        image: "revenz/fileflows:{{ fileflows_tag }}"
        ports:
          - 5000:5000
        volumes:
          - /opt/FileFlows/Data:/app/Data
          - /opt/FileFlows/Logs:/app/Logs
          - /opt/FileFlows/Temp:/app/Temp
          - /mnt/media:/mnt/media
        devices:
          - /dev/dri:/dev/dri
        restart_policy: unless-stopped


- hosts: fileflows_node
  become: yes

  vars_files:
    - vars/main.yaml

  tasks:
    - name: Ensure that the fileflows node docker container is running
      docker_container:
        name: fileflows02
        hostname: fileflows02
        image: "revenz/fileflows:{{ fileflows_tag }}"
        env:
          FFNODE: "1"
          ServerUrl: "http://{{ fileflows_server_address }}"
        ports:
          - 5000:5000
        volumes:
          - /opt/FileFlows/Logs:/app/Logs
          - /opt/FileFlows/Temp:/app/Temp
          - /mnt/media:/mnt/media
        devices:
          - /dev/dri:/dev/dri
        restart_policy: unless-stopped

